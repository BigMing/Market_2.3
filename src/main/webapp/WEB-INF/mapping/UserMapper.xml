<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Dao.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="Dao.model.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="passWord" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="headImage" property="headimage" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    userId, userName, passWord, email, headImage
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from users
    where userId = #{userid,jdbcType=INTEGER}
  </select>

    <select id="selectUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from users
        where userName = #{userName,jdbcType=VARCHAR}
    </select>

  <select id="selectByUserName" resultType="java.lang.String" parameterType="java.lang.String" >
        select
        userName
        from users
        where userName = #{userName,jdbcType=VARCHAR}
  </select>

    <select id="selectByEmail" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from users
        where email = #{email,jdbcType=VARCHAR}
    </select>

    <select id="findPassWord" resultType="java.lang.String" parameterType="java.lang.String" >
        select
        passWord
        from users
        where userName = #{userNameOrEmail,jdbcType=VARCHAR}
        or email = #{userNameOrEmail,jdbcType=VARCHAR}
    </select>

    <select id="selectUserId" resultType="java.lang.Integer" parameterType="java.lang.String" >
        select
        userId
        from users
        where userName = #{userNameOrEmail,jdbcType=VARCHAR}
        or email = #{userNameOrEmail,jdbcType=VARCHAR}
    </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Dao.model.User" >
    insert into users (userId, userName, passWord, 
      email, headImage)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{headimage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="Dao.model.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        passWord,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="headimage != null" >
        headImage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="headimage != null" >
        #{headimage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Dao.model.User" >
    update users
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="headimage != null" >
        headImage = #{headimage,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Dao.model.User" >
    update users
    set userName = #{username,jdbcType=VARCHAR},
      passWord = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      headImage = #{headimage,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>